generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
  BLOG_CREATOR
}

enum PomodoroType {
  POMODORO
  SHORT_BREAK
  LONG_BREAK
}

enum PomodoroStatus {
  ACTIVE
  PAUSE
  COMPLETED
}

model User {
  id         Int       @id @default(autoincrement())
  username   String    @unique
  email      String    @unique
  password   String
  role       Role      @default(USER)
  avatar     String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  Pomodoros  Pomodoro[]
  Tasks      Task[]
}

model Pomodoro {
  id         Int          @id @default(autoincrement())
  userId     Int
  type       PomodoroType
  duration   Int
  startTime  DateTime
  endTime    DateTime
  status     PomodoroStatus
  pauseTime  DateTime?    // Add this line
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  user       User         @relation(fields: [userId], references: [id])
  tasks      Task[]       @relation("PomodoroTasks")
}

model Task {
  id          Int          @id @default(autoincrement())
  userId      Int
  title       String
  description String
  completed   Boolean
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  user        User         @relation(fields: [userId], references: [id])
  DetailTasks DetailTask[]
  Pomodoros   Pomodoro[]   @relation("PomodoroTasks")
}

model DetailTask {
  id         Int     @id @default(autoincrement())
  taskId     Int
  title      String
  completed  Boolean
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  task       Task    @relation(fields: [taskId], references: [id])
}